@model Project.Models.User

@Html.ValidationSummary(true)
@Html.AntiForgeryToken()

<fieldset>
    <legend>Пользователь</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.FacebookId)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.FacebookId)
        @Html.ValidationMessageFor(model => model.FacebookId)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.VkontakteId)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.VkontakteId)
        @Html.ValidationMessageFor(model => model.VkontakteId)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Firstname)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Firstname)
        @Html.ValidationMessageFor(model => model.Firstname)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Lastname)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Lastname)
        @Html.ValidationMessageFor(model => model.Lastname)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Username)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Username)
        @Html.ValidationMessageFor(model => model.Username)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Gender)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Gender, ViewData["GenderList"] as SelectList)
        @Html.ValidationMessageFor(model => model.Gender)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.FavoriteSingers)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.FavoriteSingers, 5, 35, new { @class = "trigger" })
        @Html.ValidationMessageFor(model => model.FavoriteSingers)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Email)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Email)
        @Html.ValidationMessageFor(model => model.Email)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Link)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Link, new { style = "width: 500px" })
        @Html.ValidationMessageFor(model => model.Link)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.PhotoLink)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.PhotoLink, new { style = "width: 500px" })
        @Html.ValidationMessageFor(model => model.PhotoLink)
    </div>
        
    <div class="editor-label">
        @Html.LabelFor(model => model.Role)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Role, ViewData["RoleList"] as SelectList)
        @Html.ValidationMessageFor(model => model.Role)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.IsWarned)
    </div>
    <div class="editor-field">
        @Html.CheckBoxFor(model => model.IsWarned)
        @Html.ValidationMessageFor(model => model.IsWarned)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.IsBanned)
    </div>
    <div class="editor-field">
        @Html.CheckBoxFor(model => model.IsBanned)
        @Html.ValidationMessageFor(model => model.IsBanned)
    </div>
    
    <p>
        <input type="submit" name="Save" value="Сохранить" />
    </p>

    @Html.ValidationMessage("Save")

</fieldset>

<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>