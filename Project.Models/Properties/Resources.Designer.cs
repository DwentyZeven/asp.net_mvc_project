//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.239
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.Models.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Project.Models.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ^[a-zA-Z][\w\.-]*[a-zA-Z0-9]@[a-zA-Z0-9][\w\.-]*[a-zA-Z0-9]\.[a-zA-Z][a-zA-Z\.]*[a-zA-Z]$.
        /// </summary>
        public static string EmailValidatorRegEx {
            get {
                return ResourceManager.GetString("EmailValidatorRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This date must be a date in the future.
        /// </summary>
        public static string FutureDateValidationMessage {
            get {
                return ResourceManager.GetString("FutureDateValidationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на E-Mail address is not valid.
        /// </summary>
        public static string InvalidEmail {
            get {
                return ResourceManager.GetString("InvalidEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Only alpha-numeric characters and [.,:&quot;;&apos;_ -?!()] are allowed.
        /// </summary>
        public static string InvalidInputCharacter {
            get {
                return ResourceManager.GetString("InvalidInputCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Only alpha-numeric characters and [.,:&quot;;&apos;_ -?!()] are allowed.
        /// </summary>
        public static string InvalidMultilineInput {
            get {
                return ResourceManager.GetString("InvalidMultilineInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password must be at least 8 characters , contain at least one lower case letter, one upper case letter and one digit. Valid special characters are @#$%&amp;+.
        /// </summary>
        public static string InvalidPassword {
            get {
                return ResourceManager.GetString("InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ^.*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])([@#$%&amp;+]).*$.
        /// </summary>
        public static string PasswordValidatorRegEx {
            get {
                return ResourceManager.GetString("PasswordValidatorRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This date can not be in the future.
        /// </summary>
        public static string PastDateValidationMessage {
            get {
                return ResourceManager.GetString("PastDateValidationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language.
        /// </summary>
        public static string SongLanguageLabelText {
            get {
                return ResourceManager.GetString("SongLanguageLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Original quote from song.
        /// </summary>
        public static string SongQuoteLabelText {
            get {
                return ResourceManager.GetString("SongQuoteLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quote is required.
        /// </summary>
        public static string SongQuoteRequired {
            get {
                return ResourceManager.GetString("SongQuoteRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quote must be no less than 10, but no more than 255 characters.
        /// </summary>
        public static string SongQuoteStringLengthValidationError {
            get {
                return ResourceManager.GetString("SongQuoteStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Singer or band name.
        /// </summary>
        public static string SongSingerLabelText {
            get {
                return ResourceManager.GetString("SongSingerLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Singer or band name is required.
        /// </summary>
        public static string SongSingerRequired {
            get {
                return ResourceManager.GetString("SongSingerRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Singer name must be no more than 50 characters.
        /// </summary>
        public static string SongSingerStringLengthValidationError {
            get {
                return ResourceManager.GetString("SongSingerStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Song title.
        /// </summary>
        public static string SongTitleLabelText {
            get {
                return ResourceManager.GetString("SongTitleLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Song title is required.
        /// </summary>
        public static string SongTitleRequired {
            get {
                return ResourceManager.GetString("SongTitleRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Song title must be no more than 50 characters.
        /// </summary>
        public static string SongTitleStringLengthValidationError {
            get {
                return ResourceManager.GetString("SongTitleStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Translate in English, if quote is not in English (not required).
        /// </summary>
        public static string SongTranslationLabelText {
            get {
                return ResourceManager.GetString("SongTranslationLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Translation must be no less than 10, but no more than 255 characters.
        /// </summary>
        public static string SongTranslationStringLengthValidationError {
            get {
                return ResourceManager.GetString("SongTranslationStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Date must be between {0:d} and {1:d}.
        /// </summary>
        public static string StoreRestrictedDateValidationMessage {
            get {
                return ResourceManager.GetString("StoreRestrictedDateValidationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ^(?!.*--)[А-Яа-яЁёA-Za-z0-9\.,:&quot;;&apos;_ \-?!()]*$.
        /// </summary>
        public static string TextLineValidatorRegEx {
            get {
                return ResourceManager.GetString("TextLineValidatorRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ^(?!.*--)([А-Яа-яЁёA-Za-z0-9\.,:&quot;;&apos;_ \-?!()]|\r|\n)*$.
        /// </summary>
        public static string TextMultilineValidatorRegEx {
            get {
                return ResourceManager.GetString("TextMultilineValidatorRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Additional note.
        /// </summary>
        public static string TicketAdditionalNoteLabelText {
            get {
                return ResourceManager.GetString("TicketAdditionalNoteLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Additional note must be no more than 255 characters.
        /// </summary>
        public static string TicketAdditionalNoteStringLengthValidationError {
            get {
                return ResourceManager.GetString("TicketAdditionalNoteStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximum age.
        /// </summary>
        public static string TicketAgeMaxLabelText {
            get {
                return ResourceManager.GetString("TicketAgeMaxLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maximum age is invalid.
        /// </summary>
        public static string TicketAgeMaxRangeValidationError {
            get {
                return ResourceManager.GetString("TicketAgeMaxRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minimum age.
        /// </summary>
        public static string TicketAgeMinLabelText {
            get {
                return ResourceManager.GetString("TicketAgeMinLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Minimum age  is invalid.
        /// </summary>
        public static string TicketAgeMinRangeValidationError {
            get {
                return ResourceManager.GetString("TicketAgeMinRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на City.
        /// </summary>
        public static string TicketCityLabelText {
            get {
                return ResourceManager.GetString("TicketCityLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на City name must be no more than 255 characters.
        /// </summary>
        public static string TicketCityStringLengthValidationError {
            get {
                return ResourceManager.GetString("TicketCityStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Country.
        /// </summary>
        public static string TicketCountryLabelText {
            get {
                return ResourceManager.GetString("TicketCountryLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Country name must be no more than 255 characters.
        /// </summary>
        public static string TicketCountryStringLengthValidationError {
            get {
                return ResourceManager.GetString("TicketCountryStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Day.
        /// </summary>
        public static string TicketDayLabelText {
            get {
                return ResourceManager.GetString("TicketDayLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Day is invalid.
        /// </summary>
        public static string TicketDayRangeValidationError {
            get {
                return ResourceManager.GetString("TicketDayRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Firstname.
        /// </summary>
        public static string TicketFirstnameLabelText {
            get {
                return ResourceManager.GetString("TicketFirstnameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Firstname must be no more than 255 characters.
        /// </summary>
        public static string TicketFirstnameStringLengthValidationError {
            get {
                return ResourceManager.GetString("TicketFirstnameStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gender.
        /// </summary>
        public static string TicketGenderLabelText {
            get {
                return ResourceManager.GetString("TicketGenderLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gender is invalid.
        /// </summary>
        public static string TicketGenderRangeValidationError {
            get {
                return ResourceManager.GetString("TicketGenderRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gender is required.
        /// </summary>
        public static string TicketGenderRequired {
            get {
                return ResourceManager.GetString("TicketGenderRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language.
        /// </summary>
        public static string TicketLanguageLabelText {
            get {
                return ResourceManager.GetString("TicketLanguageLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lastname.
        /// </summary>
        public static string TicketLastnameLabelText {
            get {
                return ResourceManager.GetString("TicketLastnameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lastname must be no more than 255 characters.
        /// </summary>
        public static string TicketLastnameStringLengthValidationError {
            get {
                return ResourceManager.GetString("TicketLastnameStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Appearance description.
        /// </summary>
        public static string TicketLookDescriptionLabelText {
            get {
                return ResourceManager.GetString("TicketLookDescriptionLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Appearance description is required.
        /// </summary>
        public static string TicketLookDescriptionRequired {
            get {
                return ResourceManager.GetString("TicketLookDescriptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Appearance description must be no more than 255 characters.
        /// </summary>
        public static string TicketLookDescriptionStringLengthValidationError {
            get {
                return ResourceManager.GetString("TicketLookDescriptionStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Month.
        /// </summary>
        public static string TicketMonthLabelText {
            get {
                return ResourceManager.GetString("TicketMonthLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Month is invalid.
        /// </summary>
        public static string TicketMonthRangeValidationError {
            get {
                return ResourceManager.GetString("TicketMonthRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Place description.
        /// </summary>
        public static string TicketPlaceDescriptionLabelText {
            get {
                return ResourceManager.GetString("TicketPlaceDescriptionLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Place description is required.
        /// </summary>
        public static string TicketPlaceDescriptionRequired {
            get {
                return ResourceManager.GetString("TicketPlaceDescriptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Place description must be no more than 255 characters.
        /// </summary>
        public static string TicketPlaceDescriptionStringLengthValidationError {
            get {
                return ResourceManager.GetString("TicketPlaceDescriptionStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Season.
        /// </summary>
        public static string TicketSeasonLabelText {
            get {
                return ResourceManager.GetString("TicketSeasonLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Season is invalid.
        /// </summary>
        public static string TicketSeasonRangeValidationError {
            get {
                return ResourceManager.GetString("TicketSeasonRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Season is required.
        /// </summary>
        public static string TicketSeasonRequired {
            get {
                return ResourceManager.GetString("TicketSeasonRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Year.
        /// </summary>
        public static string TicketYearLabelText {
            get {
                return ResourceManager.GetString("TicketYearLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Year is invalid.
        /// </summary>
        public static string TicketYearRangeValidationError {
            get {
                return ResourceManager.GetString("TicketYearRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Year is required.
        /// </summary>
        public static string TicketYearRequired {
            get {
                return ResourceManager.GetString("TicketYearRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на E-mail.
        /// </summary>
        public static string UserEmailLabelText {
            get {
                return ResourceManager.GetString("UserEmailLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на E-mail must be no more than 50 characters.
        /// </summary>
        public static string UserEmailStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserEmailStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Facebook ID.
        /// </summary>
        public static string UserFacebookIdLabelText {
            get {
                return ResourceManager.GetString("UserFacebookIdLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Facebook ID is required.
        /// </summary>
        public static string UserFacebookIdRequired {
            get {
                return ResourceManager.GetString("UserFacebookIdRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Favorite singers.
        /// </summary>
        public static string UserFavoriteSingersLabelText {
            get {
                return ResourceManager.GetString("UserFavoriteSingersLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Favorite singers field  must be no more than 255 characters.
        /// </summary>
        public static string UserFavoriteSingersStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserFavoriteSingersStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на First name.
        /// </summary>
        public static string UserFirstnameLabelText {
            get {
                return ResourceManager.GetString("UserFirstnameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на First name is required.
        /// </summary>
        public static string UserFirstnameRequired {
            get {
                return ResourceManager.GetString("UserFirstnameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на First name must be no more than 50 characters.
        /// </summary>
        public static string UserFirstnameStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserFirstnameStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gender.
        /// </summary>
        public static string UserGenderLabelText {
            get {
                return ResourceManager.GetString("UserGenderLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gender must be in range 0-2.
        /// </summary>
        public static string UserGenderRangeValidationError {
            get {
                return ResourceManager.GetString("UserGenderRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Gender is required.
        /// </summary>
        public static string UserGenderRequired {
            get {
                return ResourceManager.GetString("UserGenderRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Banned.
        /// </summary>
        public static string UserIsBannedLabelText {
            get {
                return ResourceManager.GetString("UserIsBannedLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warned.
        /// </summary>
        public static string UserIsWarnedLabelText {
            get {
                return ResourceManager.GetString("UserIsWarnedLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last name.
        /// </summary>
        public static string UserLastnameLabelText {
            get {
                return ResourceManager.GetString("UserLastnameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last name is required.
        /// </summary>
        public static string UserLastnameRequired {
            get {
                return ResourceManager.GetString("UserLastnameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last name must be no more than 50 characters.
        /// </summary>
        public static string UserLastnameStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserLastnameStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile link.
        /// </summary>
        public static string UserLinkLabelText {
            get {
                return ResourceManager.GetString("UserLinkLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile link is required.
        /// </summary>
        public static string UserLinkRequired {
            get {
                return ResourceManager.GetString("UserLinkRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Profile link must be no more than 255 characters.
        /// </summary>
        public static string UserLinkStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserLinkStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password.
        /// </summary>
        public static string UserPasswordLabelText {
            get {
                return ResourceManager.GetString("UserPasswordLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password must be no more than 50 characters.
        /// </summary>
        public static string UserPasswordStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserPasswordStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Photo link.
        /// </summary>
        public static string UserPhotoLinkLabelText {
            get {
                return ResourceManager.GetString("UserPhotoLinkLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Photo link must be no more than 255 characters.
        /// </summary>
        public static string UserPhotoLinkStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserPhotoLinkStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role.
        /// </summary>
        public static string UserRoleLabelText {
            get {
                return ResourceManager.GetString("UserRoleLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role must be in range 1-2.
        /// </summary>
        public static string UserRoleRangeValidationError {
            get {
                return ResourceManager.GetString("UserRoleRangeValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role is required.
        /// </summary>
        public static string UserRoleRequired {
            get {
                return ResourceManager.GetString("UserRoleRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username.
        /// </summary>
        public static string UserUsernameLabelText {
            get {
                return ResourceManager.GetString("UserUsernameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username must be no more than 50 characters.
        /// </summary>
        public static string UserUsernameStringLengthValidationError {
            get {
                return ResourceManager.GetString("UserUsernameStringLengthValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VKontakte ID.
        /// </summary>
        public static string UserVkontakteIdLabelText {
            get {
                return ResourceManager.GetString("UserVkontakteIdLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VKontakte ID is required.
        /// </summary>
        public static string UserVkontakteIdRequired {
            get {
                return ResourceManager.GetString("UserVkontakteIdRequired", resourceCulture);
            }
        }
    }
}
